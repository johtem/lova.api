@page
@model LOVA.API.Pages.Lottingelund.LeafletModel
@{
    ViewData["Title"] = "Löttingelundsbladet";
    Layout = "~/Pages/Shared/_Layout.cshtml";

}


@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@Html.AntiForgeryToken()

<script>kendo.culture("sv-SE");</script>

<div class="container-fluid">

    <div class="row offset-4">
        <h4>Löttingelundsbladet</h4>
        <br />
    </div>
    <div class="row mt-5">
        <div class="col-3">

        </div>
        <div class="col-7">
            <div class="row col-12">
                @(Html.Kendo().FileManager()
        .Name("filemanager")
        // .Views(v => v.Grid(grid => grid.Columns(cols => cols.Add().Field(Path))))
        .Width(1100)
        .Height(600)
    .DataSource(ds =>
    {
        ds.Read(operation => operation
        .Type(HttpVerbs.Post)
        .Url("/Lottingelund/Leaflet?handler=Read").Data("forgeryToken")
    );

    })
    .UploadUrl("Upload", "FileManagerData")
    .Toolbar(tb => tb.Items(items =>
    {
        //items.Add("createFolder");
        //items.Add("upload");
        items.Add("sortDirection");
        items.Add("sortField");
        items.Add("changeView");
        items.Add("spacer");
        items.Add("details");
        items.Add("search");
    }))
    .Events(events => events.DataBound("onOpen"))
    .ContextMenu(context => context.Items(items =>
    {
        items.Add("download").Text("Öppna").Command("DownloadCommand").SpriteCssClass("k-icon k-i-download");
        // items.Add("delete");
    }))
)


            </div>
        </div>
        <div class="col-2">
            <partial name="_InstructionOpenDocument" />
        </div>

    </div>



</div>

@section Scripts {
    <script>


        function forgeryToken() {
            return kendo.antiForgeryTokens();
        }

        function onOpen(e) {
            console.log(e);
        }

        function dowloadCommand(e) {
            alert("heja");
        }


        var filemanagerNS = kendo.ui.filemanager;

        filemanagerNS.commands.DownloadCommand = filemanagerNS.FileManagerCommand.extend({
            exec: function () {
                var that = this,
                    filemanager = that.filemanager, // get the kendo.ui.FileManager instance
                    options = that.options, // get the options passed through the tool
                    target = options.target // options.target is available only when command is executed from the context menu
                selectedFiles = filemanager.getSelected(); // get the selected files
                window.location = '/Lottingelund/Leaflet?handler=Download&file=' + selectedFiles[0].name + selectedFiles[0].extension;

            }
        });


        $(document).ready(function () {
            var filemanager = $("#filemanager").getKendoFileManager();

            filemanager.executeCommand({ command: "TogglePaneCommand", options: { type: "preview" } });
            filemanager.toolbar.fileManagerDetailsToggle.switchInstance.toggle();





        })
    </script>
}
