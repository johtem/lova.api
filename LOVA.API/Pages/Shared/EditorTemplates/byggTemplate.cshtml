@model LOVA.API.ViewModels.RentalSchedularViewModel

@functions{

}


<div class="k-edit-label">
    <label for="start">Från</label>
</div>
<div class="k-edit-field" data-container-for="start">
    <input name="start" id="startDate" type="text" required data-type="date" data-role="datetimepicker" data-bind="value: start,visible: isAllDay" />

</div>

<div class="k-edit-label">
    <label for="end">Till</label>
</div>
<div class="k-edit-field" data-container-for="end">
    <input name="end" id="endDate" type="text" required data-type="date" data-role="datetimepicker" data-bind="value: end ,visible:isAllDay" />
</div>

<div class="k-edit-label">
    <label for="title">Titel</label>

</div>

<div data-container-for="RentalInventoryId" class="k-edit-field">

    @(Html.Kendo().DropDownListFor(model => model.RentalInventoryId)
        .HtmlAttributes(new { data_bind = "value:RentalInventoryId", style = "width: 200px" })
        .DataTextField("Text")
        .DataValueField("Value")
        .OptionLabel("None")
        .ValuePrimitive(true)
        .Template("<span class='k-scheduler-mark' style='background-color:\\#= data.Color?Color:'' \\#'></span>\\#=Text\\#")
        .BindTo(new[] {
                new { Text = "ByggStällning", Value = 1, Color = "\\#6eb3fa" },
                new { Text = "Släpkärra", Value = 2, Color = "\\#f58a8a" }
            }).ToClientTemplate()
    )
</div>





<div class="k-edit-label">
    <label for="end">Antal</label>
</div>
<div data-container-for="RentalInventoryId" class="k-edit-field">

    @(Html.Kendo().DropDownListFor(model => model.NumberOf)
        .HtmlAttributes(new { data_bind = "value:NumberOf", style = "width: 200px" })
        .DataTextField("Text")
        .DataValueField("Value")
        .OptionLabel("--Välj--")
        //.ValuePrimitive(false)
        // .Template("<span class='k-scheduler-mark' style='background-color:\\#= data.Color?Color:'' \\#'></span>\\#=Text\\#")
        .DataSource(source =>
        {
            source.Read(r => r.Url("/Rental/Workingplatform?handler=Number").Data("filterRental"));

        })
        //.Events(e => e.DataBound("onDatabound"))
        .Enable(false)
        .AutoBind(false)
        .CascadeFrom("RentalInventoryId")
    )
</div>

<script>
    function onDatabound(e) {
        
            alert(e.dataSource.Data().length);
        

    }
</script>


<div class="k-edit-label">
    <label for="description">Kommentar</label>
</div>
<div class="k-edit-field" data-container-for="description">
    <textarea name="description" class="k-textbox" data-bind="value:description"></textarea>
</div>
